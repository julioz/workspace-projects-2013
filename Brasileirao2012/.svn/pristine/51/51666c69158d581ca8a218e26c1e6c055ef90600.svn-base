package br.com.zynger.brasileirao2012.fragment;

import java.util.ArrayList;

import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.AbsListView.OnScrollListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import br.com.zynger.brasileirao2012.R;
import br.com.zynger.brasileirao2012.actionmode.NewsCallback;
import br.com.zynger.brasileirao2012.adapters.NewsArrayAdapter;
import br.com.zynger.brasileirao2012.adapters.pager.BasePagerAdapter.ActionModeDismissable;
import br.com.zynger.brasileirao2012.asynctasks.AsyncTaskListener;
import br.com.zynger.brasileirao2012.asynctasks.GetNewsTask;
import br.com.zynger.brasileirao2012.model.Article;
import br.com.zynger.brasileirao2012.model.NewsSource;
import br.com.zynger.brasileirao2012.util.ConnectionHelper;
import br.com.zynger.brasileirao2012.util.Constants;
import br.com.zynger.brasileirao2012.view.DataUpdateLayout;

import com.actionbarsherlock.app.SherlockFragment;
import com.actionbarsherlock.view.ActionMode;

public class NewsFragment extends SherlockFragment implements
		AsyncTaskListener<ArrayList<Article>>, ActionModeDismissable {

	private static final String PAGER_NEWSSOURCE = "PAGER_NEWSSOURCE";

	private static final int LAYOUT_RESOURCE = R.layout.newsviewflowadapteritem;

	protected ActionMode mActionMode;
	private NewsCallback mActionModeCallback;

	private NewsSource newsSource;
	private String clubAcronym;
	private ListView listView;
	private DataUpdateLayout dulLoading;

	private GetNewsTask newsTask;

	public static NewsFragment create(NewsSource newsSource, String clubAcronym) {
		NewsFragment fragment = new NewsFragment();
		Bundle args = new Bundle();
		args.putSerializable(PAGER_NEWSSOURCE, newsSource);
		args.putString(Constants.INTENT_CLUBACRONYM, clubAcronym);
		fragment.setArguments(args);
		return fragment;
	}

	public NewsFragment() {
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		newsSource = (NewsSource) getArguments().getSerializable(
				PAGER_NEWSSOURCE);
		clubAcronym = getArguments().getString(Constants.INTENT_CLUBACRONYM);

		mActionModeCallback = new NewsCallback(getSherlockActivity(), clubAcronym);
		newsTask = new GetNewsTask(this, newsSource);
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(LAYOUT_RESOURCE, null);

		listView = (ListView) view
				.findViewById(R.newsviewflowadapteritem.listview);
		dulLoading = (DataUpdateLayout) view
				.findViewById(R.newsviewflowadapteritem.dul_loading);
		dulLoading.addViewToToggle(listView);

		if (ConnectionHelper.isConnected(getSherlockActivity())) {
			newsTask.execute();
		} else {
			dulLoading
					.setErrorMessage(getString(R.string.newsviewflowadapter_interneterrorreading));
		}

		return view;
	}

	@Override
	public void onDestroyView() {
		if (newsTask != null) {
			newsTask.cancel(true);
		}
		super.onDestroyView();
	}

	@Override
	public Context getContext() {
		return getSherlockActivity();
	}

	@Override
	public void preExecution() {
		dulLoading.setMessage(R.string.newsdetailsactivity_reading);
		dulLoading.show();
	}

	@Override
	public void onComplete(ArrayList<Article> articles) {
		dulLoading.hide();
		listView.setAdapter(new NewsArrayAdapter(getContext(), articles));
		listView.setChoiceMode(ListView.CHOICE_MODE_SINGLE);
		
		listView.setOnScrollListener(new OnScrollListener() {
			
			@Override
			public void onScrollStateChanged(AbsListView view, int scrollState) { }
			
			@Override
			public void onScroll(AbsListView view, int firstVisibleItem,
					int visibleItemCount, int totalItemCount) {
				dismissActionMode();
			}
		});
		
		listView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> listview, View view,
					int position, long id) {
				mActionModeCallback.setModel((Article) listview.getItemAtPosition(position));
				view.setSelected(true);
				if(!mActionModeCallback.isVisible()){
					mActionMode = getSherlockActivity().startActionMode(mActionModeCallback);
				}
			}
		});
	}

	@Override
	public void onFail(String message) {
		dulLoading.show();
		dulLoading.setErrorMessage(getString(R.string.message_errortryagain));
	}
	
	private void setListViewItemsDesselected() {
		NewsArrayAdapter adapter = (NewsArrayAdapter) listView.getAdapter();
		if(adapter != null){
			adapter.setItemsDesselected();
		}
	}

	@Override
	public void dismissActionMode() {
		if(mActionMode != null && mActionModeCallback.isVisible()){
			setListViewItemsDesselected();
			mActionMode.finish();
		}
	}
}
