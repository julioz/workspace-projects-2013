package br.com.zynger.brasileirao2012.model;

import java.util.TreeMap;

import org.json.JSONArray;
import org.json.JSONException;

import br.com.zynger.brasileirao2012.enums.Division;

public class RealTimeMatch extends Match {
	private final static Integer JSON_RESULTHOME = 11;
	private final static Integer JSON_RESULTAWAY = 12;
	private final static Integer JSON_URLDETAILS = 13;
	private final static Integer JSON_HOMEPOS = 14;
	private final static Integer JSON_AWAYPOS = 15;
	private final static Integer JSON_HOMEPOSDIF = 16;
	private final static Integer JSON_AWAYPOSDIF = 17;
	private final static Integer JSON_STATE = 18;
	
	public static final int A_INICIAR = 0;
	public static final int EM_ANDAMENTO = 1;
	public static final int FINALIZADO = 2;

	private String resultHome, resultAway;
	private String urlDetails;
	private Division division;
	private Integer homePos, awayPos, homePosDif, awayPosDif;
	private int state = 0;
	
	public RealTimeMatch(){}
	
	public RealTimeMatch(JSONArray jArr, TreeMap<String, Club> clubs){
		super(jArr, clubs);
		try{			
			setResultHome(jArr.getString(JSON_RESULTHOME));
			setResultAway(jArr.getString(JSON_RESULTAWAY));
			setUrlDetails(jArr.getString(JSON_URLDETAILS));
			setHomePos(jArr.getInt(JSON_HOMEPOS));
			setAwayPos(jArr.getInt(JSON_AWAYPOS));
			setHomePosDif(jArr.getInt(JSON_HOMEPOSDIF));
			setAwayPosDif(jArr.getInt(JSON_AWAYPOSDIF));
			setStateConstant(jArr.getInt(JSON_STATE));
		}catch(JSONException je){
			je.printStackTrace();
		}
	}
	
	@Override
	public int getScoreHome() {
		return getResultHome().equals("") ? -1 : Integer.valueOf(getResultHome());
	}
	
	@Override
	public int getScoreAway() {
		return getResultAway().equals("") ? -1 : Integer.valueOf(getResultAway());
	}

	public String getUrlDetails() {
		return urlDetails;
	}

	public void setUrlDetails(String urlDetails) {
		this.urlDetails = urlDetails;
	}

	public int getStateConstant() {
		return state;
	}

	public void setStateConstant(int state) {
		this.state = state;
		
		if(this.state == A_INICIAR){
			setResultHome("");
			setResultAway("");
		}
	}
	
	public Division getDivision() {
		return division;
	}
	
	public void setDivision(Division division) {
		this.division = division;
	}
	
	public String getResultHome() {
		return resultHome;
	}
	
	public void setResultHome(String resultHome) {
		this.resultHome = resultHome;
	}
	
	public String getResultAway() {
		return resultAway;
	}
	
	public void setResultAway(String resultAway) {
		this.resultAway = resultAway;
	}
	
	public String getState() {
		if(state == EM_ANDAMENTO) return "Em andamento";
		else if(state == FINALIZADO) return "Finalizado";
		else return "A iniciar";
	}
	
	public Integer getHomePos() {
		return homePos;
	}
	
	public void setHomePos(Integer homePos) {
		this.homePos = homePos;
	}
	
	public Integer getAwayPos() {
		return awayPos;
	}
	
	public void setAwayPos(Integer awayPos) {
		this.awayPos = awayPos;
	}

	public Integer getHomePosDif() {
		return homePosDif;
	}

	public void setHomePosDif(Integer homePosDif) {
		this.homePosDif = homePosDif;
	}

	public Integer getAwayPosDif() {
		return awayPosDif;
	}

	public void setAwayPosDif(Integer awayPosDif) {
		this.awayPosDif = awayPosDif;
	}

	@Override
	public JSONArray toJson() {
		try{			
			JSONArray jArr = super.toJson();
			
			jArr.put(JSON_RESULTHOME, getResultHome());
			jArr.put(JSON_RESULTAWAY, getResultAway());
			jArr.put(JSON_URLDETAILS, getUrlDetails());
			jArr.put(JSON_HOMEPOS, String.valueOf(getHomePos()));
			jArr.put(JSON_AWAYPOS, String.valueOf(getAwayPos()));
			jArr.put(JSON_HOMEPOSDIF, String.valueOf(getHomePosDif()));
			jArr.put(JSON_AWAYPOSDIF, String.valueOf(getAwayPosDif()));
			jArr.put(JSON_STATE, String.valueOf(getStateConstant()));
			
			return jArr;
		}catch(JSONException je){
			je.printStackTrace();
			return null;
		}
	}
	
}