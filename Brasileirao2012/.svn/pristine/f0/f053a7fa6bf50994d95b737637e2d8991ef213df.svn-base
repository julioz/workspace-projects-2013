package br.com.zynger.brasileirao2012;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.TreeMap;

import android.app.Activity;
import android.app.ListActivity;
import android.content.Context;
import android.graphics.Shader.TileMode;
import android.graphics.Typeface;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.LinearInterpolator;
import android.view.animation.RotateAnimation;
import android.widget.ArrayAdapter;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.LinearLayout.LayoutParams;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import br.com.zynger.brasileirao2012.model.Club;
import br.com.zynger.brasileirao2012.util.FileHandler;
import br.com.zynger.brasileirao2012.util.ShareHelper;
import br.com.zynger.brasileirao2012.view.ActionItem;
import br.com.zynger.brasileirao2012.view.QuickAction;
import br.com.zynger.brasileirao2012.web.HTMLManager;

public class TorcidometerActivity extends ListActivity {
	
	private TextView tv_actionbar;
	private ImageButton update;
	private RotateAnimation rot;
	private LinearLayout ll_tv_loading;

	private QuickAction quickaction;
	private ActionItem actionItem_share;
	
	private int widthBase = 0;
	
	private TreeMap<String, Club> clubs;
	private String myClub;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);		
		setContentView(R.layout.torcidometer);
		
		loadViews();
		setData(this);
		
		ll_tv_loading.setVisibility(View.GONE);
		getListView().setVisibility(View.VISIBLE);
	}
	
	private void loadViews() {
		tv_actionbar = (TextView) findViewById(R.torcidometer.tv_name);
		tv_actionbar.setTypeface(Typeface.createFromAsset(getAssets(), "tertre-xbol.otf"));
		
		ll_tv_loading = (LinearLayout) findViewById(R.torcidometer.ll_tv_loading);
		
		rot = new RotateAnimation(0, 360, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);
		rot.setInterpolator(new LinearInterpolator());
		rot.setDuration(900L);
		rot.setStartTime(200L);
		
		update = (ImageButton) findViewById(R.torcidometer.ib_update);
		
		actionItem_share = new ActionItem();
		actionItem_share.setIcon(getResources().getDrawable(R.drawable.ic_share_quickaction));
		actionItem_share.setTitle("Compartilhar");
		
		update.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				v.startAnimation(rot);
				new UpdateFansDataTask(v.getContext()).execute();
			}
		});
	}
	
	@Override
	protected void onListItemClick(ListView l, View v, int pos, long id) {
		super.onListItemClick(l, v, pos, id);
		
		final int position = pos;
		
		quickaction = new QuickAction(v);
		quickaction.setAnimStyle(QuickAction.ANIM_REFLECT);

		actionItem_share.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				quickaction.dismiss();
				
				Club club = (Club) getListAdapter().getItem(position);
				String message = "O " + club.getName() + " está em " + Integer.valueOf(position+1) + "° lugar no torcidômetro do Brasileirão 2012 com " + club.getFans() + " torcedores!\n\nBaixe já o aplicativo para android no Google Play e vamos aumentar a contagem!" + " http://bit.ly/IpBPUV";
				new ShareHelper((Activity) v.getContext(), message).share();
			}
		});

		quickaction.addActionItem(actionItem_share);
		quickaction.show();
	}
	
	@SuppressWarnings("unchecked")
	private void setData(Context c){
		clubs = (TreeMap<String, Club>) FileHandler.openBackup(c, FileHandler.CLUBS);
		String my_club_name = (String) FileHandler.openBackup(c, FileHandler.MYCLUB);
		Club my_club = clubs.get(my_club_name);
		myClub = my_club.getAcronym();
		
		ArrayList<Club> al = new ArrayList<Club>();
		int totalFans = 0;
		for (Club club : clubs.values()) {
			al.add(club);
			totalFans += club.getFans();
		}
		
		Collections.sort(al, new ClubComparable());
		
		TorcidometerArrayAdapter taa = new TorcidometerArrayAdapter(c, R.layout.fans_row, al, totalFans);
		setListAdapter(taa);
	}
	
	public class ClubComparable implements Comparator<Club>{
		 
		@Override
		public int compare(Club c1, Club c2) {
			int f1 = c1.getFans();
			int f2 = c2.getFans();
			return (f1>f2 ? -1 : (f1==f2 ? 0 : 1));
		}
	}
	
	private class TorcidometerArrayAdapter extends ArrayAdapter<Club>{

		@SuppressWarnings("unused")
		private Context mContext;
		private final LayoutInflater mInflater;
		private int layoutResourceId;
		private ArrayList<Club> al;
		private int totalFans;
		
		public TorcidometerArrayAdapter(Context context, int layoutResourceId, ArrayList<Club> al, int totalFans) {
			super(context, layoutResourceId);
			this.mInflater = LayoutInflater.from(context);
			this.layoutResourceId = layoutResourceId;
			this.al = al;
			this.totalFans = totalFans;
			this.mContext = context;
		}
		
		@Override
		public int getCount() {
			return al.size();
		}
		
		@Override
		public Club getItem(int position) {
			return al.get(position);
		}
		
		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View row = convertView;
	        FansHolder holder = null;
	        
	        if(row == null){
	            row = mInflater.inflate(layoutResourceId, parent, false);
	            
	            holder = new FansHolder();
	            holder.imgIcon = (ImageView) row.findViewById(R.fans_row.imageview);
	            holder.txtNumber = (TextView) row.findViewById(R.fans_row.tv_number);
	            holder.bar = (View) row.findViewById(R.fans_row.v_bar);
	            
	            row.setTag(holder);
	        }else{
	            holder = (FansHolder) row.getTag();
	        }
	        
	        Club club = al.get(position);
	        
	        holder.imgIcon.setImageResource(club.getBadge());
	        holder.txtNumber.setText(String.valueOf(club.getFans()));
	        
	        int height = (int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 24, getResources().getDisplayMetrics());
	        
	        if(widthBase == 0) widthBase = findViewById(R.torcidometer.dummy_ll_bar).getWidth();

	        float parentwidthsize = widthBase;
	        
	        if(totalFans == 0) totalFans = 1;
	        
	        float factor = (float) club.getFans()/totalFans;
	        factor = (float) (factor * 4);
	        float width = factor * parentwidthsize;
	        
	        if(width > parentwidthsize) width = (float) (parentwidthsize * 0.9);
	        else if(width < 1) width = 1;
	        
	        LayoutParams lp = new LayoutParams((int) width, height);
	        holder.bar.setLayoutParams(lp);
	        fixBackgroundRepeat(holder.bar);

	        return row;
		}
	}
	
	/* workaround para bug do android < 4.0 em que o BG fica extendido */
	public static void fixBackgroundRepeat(View view) {
	    Drawable bg = view.getBackground();
	    if (bg != null) {
	        if (bg instanceof BitmapDrawable) {
	            BitmapDrawable bmp = (BitmapDrawable) bg;
	            bmp.mutate(); // make sure that we aren't sharing state anymore
	            bmp.setTileModeXY(TileMode.REPEAT, TileMode.REPEAT);
	        }
	    }
	}
	
	private static class FansHolder{
        ImageView imgIcon;
        TextView txtNumber;
        View bar;
    }
	
	private class UpdateFansDataTask extends AsyncTask<Void, Void, Boolean> {
		private Context c;
		
		public UpdateFansDataTask(Context c){
			this.setContext(c);
		}
		
		@Override
		protected void onPreExecute() {
			getListView().setVisibility(View.GONE);
			ll_tv_loading.setVisibility(View.VISIBLE);
			super.onPreExecute();
		}
		
		@Override
		protected Boolean doInBackground(Void... params) {
			return HTMLManager.updateFansData(getContext(), myClub);
		}

		@Override
		protected void onPostExecute(Boolean result) {
			String toast;
			if(result == true){
				setData(getContext());
				
				toast = "Dados atualizados";
			}
			else toast = "Não foi possível atualizar os dados, tente mais tarde";
			
			ll_tv_loading.setVisibility(View.GONE);
			getListView().setVisibility(View.VISIBLE);
			
			Toast.makeText(getContext(), toast, Toast.LENGTH_SHORT).show();
			super.onPostExecute(result);
		}

		public Context getContext() {
			return c;
		}

		public void setContext(Context c) {
			this.c = c;
		}
	}
}
