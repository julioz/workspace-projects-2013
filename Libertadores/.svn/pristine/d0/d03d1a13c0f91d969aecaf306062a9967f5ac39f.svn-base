package br.com.zynger.libertadores;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.TreeMap;

import android.app.ListActivity;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TableRow;
import android.widget.Toast;
import br.com.zynger.libertadores.adapters.MatchesListAdapter;
import br.com.zynger.libertadores.adapters.StandingsAdapter;
import br.com.zynger.libertadores.asynctasks.AsyncTaskListener;
import br.com.zynger.libertadores.asynctasks.GetMatchesGroupTask;
import br.com.zynger.libertadores.data.ClubsDB;
import br.com.zynger.libertadores.data.GroupsDB;
import br.com.zynger.libertadores.model.Club;
import br.com.zynger.libertadores.model.Group;
import br.com.zynger.libertadores.model.Match;
import br.com.zynger.libertadores.util.GroupEnum;
import br.com.zynger.libertadores.util.InternalStorageHandler;
import br.com.zynger.libertadores.view.HelveticaTextView;
import br.com.zynger.libertadores.web.MatchesParser;

public class GroupActivity extends ListActivity implements AsyncTaskListener {

	public final static String INTENT_GROUPNUM = "INTENT_GROUPNUM";
	
	private ClubsDB clubsDB;
	private TreeMap<String, Club> clubs;
	private GroupsDB groupsDB;
	private InternalStorageHandler internalStorage;
	
	private MatchesParser matchesParser;
	
	private Group group;
	
	private GroupEnum gEnum;
	private boolean areMatchesShowing;
	
	private HelveticaTextView tv_title;
	private HelveticaTextView tv_toggle_standings_matches;
	private TableRow tr_standings_header;
	private RelativeLayout rl_loading;
	private LinearLayout ll_toggle_standings_matches;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.groupsactivity);
		clubsDB = ClubsDB.getSingletonObject(this);
		clubs = clubsDB.getClubs();
		groupsDB = GroupsDB.getSingletonObject(clubsDB);
		internalStorage = new InternalStorageHandler(this);
		matchesParser = new MatchesParser(this, clubs);
		
		gEnum = (GroupEnum) getIntent().getSerializableExtra(INTENT_GROUPNUM);
		this.group = groupsDB.getGroups().get(gEnum);
		
		loadViews();
		
		areMatchesShowing = true;
		
		tv_title.setText(gEnum.toString().replace('_', ' '));
		toggleListContent();
	}

	private void loadViews() {
		tv_title = (HelveticaTextView) findViewById(R.groupsactivity.titlebar_tvtitle);
		rl_loading = (RelativeLayout) findViewById(R.groupsactivity.rl_loading);
		tv_toggle_standings_matches = (HelveticaTextView) findViewById(R.groupsactivity.tv_toggle_standings_matches);
		ll_toggle_standings_matches = (LinearLayout) findViewById(R.groupsactivity.ll_toggle_standings_matches);
		tr_standings_header = (TableRow) findViewById(R.groupsactivity.tr_toggle_standings);
		
		ll_toggle_standings_matches.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				areMatchesShowing = !areMatchesShowing;
				toggleListContent();
			}
		});
	}
	
	private void toggleListContent() {
		if(!areMatchesShowing){
			tv_toggle_standings_matches.setText(getString(R.string.homedashboard_standings).toUpperCase());
			tr_standings_header.setVisibility(View.VISIBLE);
			ArrayList<Club> listClubs = new ArrayList<Club>();
			for (Club club : clubs.values()) {
				if(club.getGroup() == gEnum) listClubs.add(club);
			}
			Collections.sort(listClubs, new ByGroupPositionComparator());
			setListAdapter(new StandingsAdapter(this, listClubs));
		}else{
			tr_standings_header.setVisibility(View.GONE);
			tv_toggle_standings_matches.setText(getString(R.string.homedashboard_matches).toUpperCase());
			new GetMatchesGroupTask(matchesParser, this, group.getAbsoluteNumber()).execute(); //TODO trocar por restoreBackup ou Asynctask
		}
	}
	
	public class ByGroupPositionComparator implements Comparator<Club> {
		@Override
		public int compare(Club lhs, Club rhs) {
			return lhs.getGroupPosition() - rhs.getGroupPosition();
		}
	}
	
	private void showUpdatingLayout() {
		getListView().setVisibility(View.GONE);
		rl_loading.setVisibility(View.VISIBLE);
	}
	
	private void hideUpdatingLayout() {
		rl_loading.setVisibility(View.GONE);
		getListView().setVisibility(View.VISIBLE);
	}

	@Override
	public void preExecution() {
		showUpdatingLayout();
	}

	@SuppressWarnings("unchecked")
	@Override
	public void onComplete(Object result) {
		//TODO persistir dados
		ArrayList<Match> matches = (ArrayList<Match>) result;
		Collections.sort(matches);
		setListAdapter(new MatchesListAdapter(this, matches));

		hideUpdatingLayout();
	}

	@Override
	public void onFail(String message) {
		//TODO load the old definitions
		hideUpdatingLayout();
		Toast.makeText(this, message, Toast.LENGTH_SHORT).show();
	}
}
