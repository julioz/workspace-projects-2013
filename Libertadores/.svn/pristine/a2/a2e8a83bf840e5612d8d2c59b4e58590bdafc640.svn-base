package br.com.zynger.libertadores;

import java.util.ArrayList;

import android.app.ListActivity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import br.com.zynger.libertadores.adapters.VideoCentralAdapter;
import br.com.zynger.libertadores.asynctasks.AsyncTaskListener;
import br.com.zynger.libertadores.asynctasks.GetVideoCentralTask;
import br.com.zynger.libertadores.model.Video;
import br.com.zynger.libertadores.view.HelveticaTextView;
import br.com.zynger.libertadores.view.LogoProgressBar;
import br.com.zynger.libertadores.web.VideoCentralParser;

public class VideoCentralActivity extends ListActivity implements AsyncTaskListener {

	public final static String INTENT_SEARCH_KEYWORDS = "INTENT_SEARCH_KEYWORDS";
	
	private VideoCentralParser parser;
	
	private HelveticaTextView tv_title;
	private RelativeLayout rl_loading, rl_search;
	private LogoProgressBar lpb_updating;
	private TextView tv_updating;
	private EditText et_searchbox;
	private Button bt_searchconfirm;
	
	private SharedPreferences sharedPrefs;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.videocentralactivity);
		sharedPrefs = PreferenceManager.getDefaultSharedPreferences(this);
		
		String searchKeywords = getIntent().getStringExtra(INTENT_SEARCH_KEYWORDS);
		
		loadViews();
		
		if(searchKeywords != null) et_searchbox.setText(searchKeywords);

		parser = new VideoCentralParser(this);
		
		new GetVideoCentralTask(parser, searchKeywords, this).execute();
		
		bt_searchconfirm.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				new GetVideoCentralTask(parser, et_searchbox.getText().toString().trim(),
						VideoCentralActivity.this).execute();
			}
		});

		et_searchbox.setOnKeyListener(new TextView.OnKeyListener() {
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				// If the event is a key-down event on the "enter" button
				if ((event.getAction() == KeyEvent.ACTION_DOWN) &&
						(keyCode == KeyEvent.KEYCODE_ENTER)){
					bt_searchconfirm.performClick();
					return true;
				}
				return false;
			}
		});
	}
	
	private void loadViews() {
		tv_title = (HelveticaTextView) findViewById(R.videocentralactivity.titlebar_tvtitle);
		rl_loading = (RelativeLayout) findViewById(R.videocentralactivity.rl_loading);
		lpb_updating = (LogoProgressBar) rl_loading.findViewById(R.relativelayout_loading.lpb_updating);
		tv_updating = (TextView) rl_loading.findViewById(R.relativelayout_loading.tv_updating);
		rl_search = (RelativeLayout) findViewById(R.videocentralactivity.rl_search);
		et_searchbox = (EditText) findViewById(R.videocentralactivity.et_searchbox);
		bt_searchconfirm = (Button) findViewById(R.videocentralactivity.bt_searchconfirm);

		tv_title.setText(getString(R.string.homedashboard_videocentral).toUpperCase());
	}
	
	@Override
	protected void onListItemClick(ListView l, View v, int position, long id) {
		Video video = (Video) l.getAdapter().getItem(position);
		Intent i = new Intent(Intent.ACTION_VIEW);
		i.setData(Uri.parse(video.getUrl()));
		v.getContext().startActivity(i);
		super.onListItemClick(l, v, position, id);
	}
	
	private void showUpdatingLayout() {
		getListView().setVisibility(View.GONE);
		rl_search.setVisibility(View.GONE);
		lpb_updating.setVisibility(View.VISIBLE);
		tv_updating.setText(getString(R.string.updating));
		RelativeLayout.LayoutParams p = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT,
				RelativeLayout.LayoutParams.WRAP_CONTENT);
		p.addRule(RelativeLayout.BELOW, R.relativelayout_loading.lpb_updating);
		p.addRule(RelativeLayout.CENTER_HORIZONTAL);
		tv_updating.setLayoutParams(p);		
		rl_loading.setVisibility(View.VISIBLE);
	}
	
	private void hideUpdatingLayout() {
		rl_loading.setVisibility(View.GONE);
		getListView().setVisibility(View.VISIBLE);
		rl_search.setVisibility(View.VISIBLE);
	}

	@Override
	public void preExecution() {
		showUpdatingLayout();
	}

	@SuppressWarnings("unchecked")
	@Override
	public void onComplete(Object result) {
		ArrayList<Video> videos = (ArrayList<Video>) result;

		if(videos.size() > 0){
			setListAdapter(new VideoCentralAdapter(this, videos, sharedPrefs.getBoolean("cb_imgsdownload", true)));
			hideUpdatingLayout();
		}else{
			showNoVideosText(getString(R.string.error_emptyvideos));
		}
	}

	@Override
	public void onFail(String message) {
		showNoVideosText(getString(R.string.error_novideos));
	}
	
	private void showNoVideosText(String message) {
		rl_search.setVisibility(View.GONE);
		lpb_updating.setVisibility(View.GONE);
		tv_updating.setText(message);
		tv_updating.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.FILL_PARENT,
				RelativeLayout.LayoutParams.FILL_PARENT));
		tv_updating.setGravity(Gravity.CENTER);
	}
}
