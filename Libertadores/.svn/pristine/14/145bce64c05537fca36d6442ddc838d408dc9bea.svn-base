package br.com.zynger.libertadores;

import java.util.ArrayList;
import java.util.TreeMap;

import org.json.JSONObject;
import org.taptwo.android.widget.CircleFlowIndicator;
import org.taptwo.android.widget.ViewFlow;

import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.Toast;
import br.com.zynger.libertadores.adapters.StandingsActivityViewFlowAdapter;
import br.com.zynger.libertadores.adapters.StandingsAdapter;
import br.com.zynger.libertadores.adapters.StandingsExpandableListViewAdapter;
import br.com.zynger.libertadores.asynctasks.AsyncTaskListener;
import br.com.zynger.libertadores.asynctasks.GetStandingsStatsTask;
import br.com.zynger.libertadores.data.ClubsDB;
import br.com.zynger.libertadores.data.GroupsDB;
import br.com.zynger.libertadores.model.Club;
import br.com.zynger.libertadores.model.Group;
import br.com.zynger.libertadores.util.InternalStorageHandler;
import br.com.zynger.libertadores.util.JsonUtil;
import br.com.zynger.libertadores.view.HelveticaTextView;
import br.com.zynger.libertadores.view.UpdateImageView;
import br.com.zynger.libertadores.web.StandingsParser;

public class StandingsActivity extends Activity implements AsyncTaskListener {

	private ClubsDB clubsDB;
	private TreeMap<String, Club> clubs;
	private GroupsDB groupsDB;
	private InternalStorageHandler internalStorage;
	
	private ViewFlow viewFlow;
	private CircleFlowIndicator indic;
	
	private StandingsParser standingsParser;
	
	private SharedPreferences sharedPrefs;
	
	private HelveticaTextView tv_title;
	private UpdateImageView uiv_update;
	private ImageView iv_calculator;
	private RelativeLayout rl_loading;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.standingsactivity);
		
		clubsDB = ClubsDB.getSingletonObject(this);
		clubs = clubsDB.getClubs();
		groupsDB = GroupsDB.getSingletonObject(clubsDB);
		internalStorage = new InternalStorageHandler(this);
		
		sharedPrefs = PreferenceManager.getDefaultSharedPreferences(this);
		
		standingsParser = new StandingsParser(clubs, groupsDB.getGroups(), internalStorage);
		
		loadViews();
		
		uiv_update.setOnClickListener(new OnClickListener() {
            @Override
            public void onClick(View v) {
                uiv_update.rotateView();
                new GetStandingsStatsTask(v.getContext(), standingsParser,
                		StandingsActivity.this).execute();
            }
        });
		
		iv_calculator.setOnLongClickListener(new OnLongClickListener() {
			@Override
			public boolean onLongClick(View v) {
				Toast.makeText(v.getContext(),
						getString(R.string.roundofsixteensimulatoractivity_title),
						Toast.LENGTH_SHORT).show();
				return true;
			}
		});
		
		iv_calculator.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent it = new Intent(v.getContext(), RoundOfSixteenSimulatorActivity.class);
				startActivity(it);
			}
		});
		
		if(sharedPrefs.getBoolean("cb_actsupdates", false)) uiv_update.performClick();
        else setAdapterFromClubs();
	}
	
	private void loadViews() {
		tv_title = (HelveticaTextView) findViewById(R.standingsactivity.titlebar_tvtitle);
		iv_calculator = (ImageView) findViewById(R.standingsactivity.titlebar_ivcalculator);
		uiv_update = (UpdateImageView) findViewById(R.standingsactivity.titlebar_ivupdate);
		rl_loading = (RelativeLayout) findViewById(R.standingsactivity.rl_loading);
		
		tv_title.setText(getString(R.string.homedashboard_standings).toUpperCase());
		
		viewFlow = (ViewFlow) findViewById(R.standingsactivity.viewflow);
		viewFlow.setAdapter(new StandingsActivityViewFlowAdapter(this));
		indic = (CircleFlowIndicator) findViewById(R.standingsactivity.viewflowindicator);
		viewFlow.setFlowIndicator(indic);
	}
	
	private void showUpdatingLayout() {
		viewFlow.setVisibility(View.GONE);
		indic.setVisibility(View.GONE);
		rl_loading.setVisibility(View.VISIBLE);
	}
	
	private void hideUpdatingLayout() {
		rl_loading.setVisibility(View.GONE);
		viewFlow.setVisibility(View.VISIBLE);
		indic.setVisibility(View.VISIBLE);
	}
	
	private void setAdapterFromClubs() {
		ArrayList<Club> listClubs = new ArrayList<Club>();
		for (Club club : clubs.values()) {
			if(club.getGroup() != null) listClubs.add(club);
		}
		ArrayList<Group> groups = new ArrayList<Group>(groupsDB.getGroups().values());
		
		StandingsActivityViewFlowAdapter adapter = (StandingsActivityViewFlowAdapter) viewFlow.getAdapter();
		adapter.setListViewAdapter(new StandingsAdapter(this, listClubs));
		
		StandingsExpandableListViewAdapter exAdpt = new StandingsExpandableListViewAdapter(this, groups);
		adapter.setExpandableListViewAdapter(exAdpt);
	}

	@Override
	public void preExecution() {
		showUpdatingLayout();
	}

	@Override
	public void onComplete(Object result) {
		JSONObject json = JsonUtil.createStandingsJson(clubs);
		internalStorage.saveBackup(this, InternalStorageHandler.STANDINGS_JSON, json.toString());
		
		Toast.makeText(this, getString(R.string.standingsactivity_warning_updatematches),
				Toast.LENGTH_LONG).show();
		
		hideUpdatingLayout();
		setAdapterFromClubs();
	}

	@Override
	public void onFail(String message) {
		setAdapterFromClubs();
		hideUpdatingLayout();
		Toast.makeText(this, message, Toast.LENGTH_LONG).show();
	}
	
}
