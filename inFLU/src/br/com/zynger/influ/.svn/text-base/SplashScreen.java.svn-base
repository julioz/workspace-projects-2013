package br.com.zynger.influ;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

import android.app.Activity;
import android.app.ProgressDialog;
import android.appwidget.AppWidgetManager;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.ConnectivityManager;
import android.net.NetworkInfo.State;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.animation.AlphaAnimation;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Toast;
import br.com.zynger.influ.model.FutureGame;
import br.com.zynger.influ.util.FileHandler;
import br.com.zynger.influ.web.HTMLManager;

public class SplashScreen extends Activity implements Runnable {

	private LinearLayout llUpdate;
	private ImageView splash_screen;
	private Button bt_updateYes, bt_updateNo;
	private AlphaAnimation anim_fadein;
	private final int[] splashes = { R.drawable.splash_screen_fred, R.drawable.splash_screen_deco, R.drawable.splash_screen_rafaelmoura, R.drawable.splash_screen_thiagoneves, R.drawable.splash_screen_guanabara, R.drawable.splash_screen_carioca };
	
	private final static int SPLASH_TIME = 2000;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.splash);
		loadViews();
		
		try{
			Random r = new Random();
			int chosen_one = r.nextInt(splashes.length);
			splash_screen.setImageResource(splashes[chosen_one]);
		}catch(NullPointerException e){
			splash_screen.setImageResource(splashes[0]);
		}

		Handler h = new Handler();
		h.postDelayed(this, SPLASH_TIME); //aqui Ã© definido o delay do handler em milisegundos
	}

	public void run(){
		if(isConnected(this)){
			llUpdate.startAnimation(anim_fadein);
	    	llUpdate.setVisibility(View.VISIBLE);
	    	
	    	bt_updateYes.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					new DownloadFilesTask(v.getContext()).execute();
				}
			});
	    	
	    	bt_updateNo.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					startActivity(new Intent(v.getContext(), HomeActivity.class));
					finish();
				}
			});
		}else{
			startActivity(new Intent(this, HomeActivity.class));
			finish();
		}
	}
	
	public static boolean isConnected(Context c){
		ConnectivityManager conMan = (ConnectivityManager) c.getSystemService(Context.CONNECTIVITY_SERVICE);

		try{			
			State mobile = conMan.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState();
			State wifi = conMan.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState();

			if (mobile == State.CONNECTED || mobile == State.CONNECTING) {
				return true;
			} else if (wifi == State.CONNECTED || wifi == State.CONNECTING) {
				return true;
			}else{
				return false;
			}
		}catch(NullPointerException e){
			return false;
		}

	}
	
	public static String getAppVersion(Context c){
		PackageManager manager = c.getPackageManager();
		try {
			PackageInfo info = manager.getPackageInfo(c.getPackageName(), 0);
			//String packageName = info.packageName;
			//return info.versionCode;
			return info.versionName;
			//Log.d("SiTE", "Package Name: " + packageName);
			//Log.d("SiTE", "Version Code: " + this.versionCode);
			//Log.d("SiTE", "Version Name: " + this.versionName);
		} catch (NameNotFoundException e) {
			e.printStackTrace();
			return "";
		}
	}
	
	private void loadViews(){
		splash_screen = (ImageView) findViewById(R.splash.iv_splash);
		llUpdate = (LinearLayout) findViewById(R.splash.ll_update);
		bt_updateYes = (Button) findViewById(R.splash.bt_updateYes);
		bt_updateNo = (Button) findViewById(R.splash.bt_updateNo);
		
		anim_fadein = new AlphaAnimation(0, 1);
    	anim_fadein.setDuration(450);
    	anim_fadein.setFillEnabled(true);
    	anim_fadein.setFillAfter(true);
	}

	private class DownloadLibertadoresInfo extends AsyncTask<Void, Void, Void> {
		private Context c;
		
		public DownloadLibertadoresInfo(Context c){
			this.c = c;
		}
		
		@Override
		protected Void doInBackground(Void... params) {
			try {
				FileHandler.saveBackup(c, RankingTableActivity.ARQUIVO_LIBERTADORES, HTMLManager.getRankingLibertadores());
				Log.i("inFLU", "O arquivo " + RankingTableActivity.ARQUIVO_LIBERTADORES + " foi salvo.");
			} catch (IOException e) { }
			return null;
		}
	}
	
	private class DownloadCariocaFinalsInfo extends AsyncTask<Void, Void, Void> {
		private Context c;
		
		public DownloadCariocaFinalsInfo(Context c){
			this.c = c;
		}
		
		@Override
		protected Void doInBackground(Void... params) {
			try {
				ArrayList<ArrayList<FutureGame>> al = HTMLManager.getFinals(false);
				if(al != null){
					FileHandler.saveBackup(c, RankingFinalsActivity.ARQUIVO_CARIOCA, al);
					Log.i("inFLU", "O arquivo " + RankingFinalsActivity.ARQUIVO_CARIOCA + " foi salvo.");
				}
			} catch (IOException e) { }
			return null;
		}
	}
	
	private class DownloadLibertadoresFinalsInfo extends AsyncTask<Void, Void, Void> {
		private Context c;
		
		public DownloadLibertadoresFinalsInfo(Context c){
			this.c = c;
		}
		
		@Override
		protected Void doInBackground(Void... params) {
			try {
				ArrayList<ArrayList<FutureGame>> al = HTMLManager.getFinals(true);
				if(al != null){
					FileHandler.saveBackup(c, RankingFinalsActivity.ARQUIVO_LIBERTADORES, al);
					Log.i("inFLU", "O arquivo " + RankingFinalsActivity.ARQUIVO_LIBERTADORES + " foi salvo.");
				}
			} catch (IOException e) { }
			return null;
		}
	}
	
	private class DownloadFilesTask extends AsyncTask<Void, Void, Void> {
		private Context c;
		private ProgressDialog pd;
		private boolean success = false;
		
		public DownloadFilesTask(Context c){
			this.c = c;
		}
		
		@Override
		protected void onPreExecute() {
			pd = new ProgressDialog(c);
			pd.setIndeterminate(true);
			pd.setCancelable(false);
			pd.setTitle("Download");
			pd.setMessage("Atualizando...");
			new DownloadLibertadoresInfo(c).execute();
			new DownloadCariocaFinalsInfo(c).execute();
			new DownloadLibertadoresFinalsInfo(c).execute();
			pd.show();
			super.onPreExecute();
		}

		@Override
		protected Void doInBackground(Void... arg0) {
			try{
				FileHandler.saveBackup(c, TicketsActivity.ARQUIVO, HTMLManager.getTicketsInfo());
				Log.i("inFLU", "O arquivo " + TicketsActivity.ARQUIVO + " foi salvo.");
				
				FileHandler.saveBackup(c, StatisticsActivity.ARQUIVO, HTMLManager.getPlayerStats());
				Log.i("inFLU", "O arquivo " + StatisticsActivity.ARQUIVO + " foi salvo.");
				FileHandler.saveBackup(c, NextGameActivity.ARQUIVO, NextGameActivity.parseXml());
				Log.i("inFLU", "O arquivo " + NextGameActivity.ARQUIVO + " foi salvo.");
				NextGameWidgetProvider.updateWidgetContent(c, AppWidgetManager.getInstance(c));
				FileHandler.saveBackup(c, GamesTableActivity.ARQUIVO, GamesTableActivity.parseFutureGames());
				Log.i("inFLU", "O arquivo " + GamesTableActivity.ARQUIVO + " foi salvo.");
				FileHandler.saveBackup(c, IdolsActivity.ARQUIVO, IdolsActivity.loadContent());
				Log.i("inFLU", "O arquivo " + IdolsActivity.ARQUIVO + " foi salvo.");

				FileHandler.saveBackup(c, StatisticsDataActivity.ARQUIVO, HTMLManager.getStatisticsDataInfo());
				Log.i("inFLU", "O arquivo " + StatisticsDataActivity.ARQUIVO + " foi salvo.");

				FileHandler.saveBackup(c, RankingTableActivity.ARQUIVO_BRASILEIRAO, HTMLManager.getRankingBrasileirao());
				Log.i("inFLU", "O arquivo " + RankingTableActivity.ARQUIVO_BRASILEIRAO + " foi salvo.");
				RankingBrasileiraoWidgetProvider.updateRankingBrasileiraoWidgetContent(c, AppWidgetManager.getInstance(c));
				FileHandler.saveBackup(c, RankingTableActivity.ARQUIVO_CARIOCA_A, HTMLManager.getRankingCarioca(RankingCariocaTabActivity.CARIOCA_GRUPO_A));
				Log.i("inFLU", "O arquivo " + RankingTableActivity.ARQUIVO_CARIOCA_A + " foi salvo.");
				FileHandler.saveBackup(c, RankingTableActivity.ARQUIVO_CARIOCA_B, HTMLManager.getRankingCarioca(RankingCariocaTabActivity.CARIOCA_GRUPO_B));
				Log.i("inFLU", "O arquivo " + RankingTableActivity.ARQUIVO_CARIOCA_B + " foi salvo.");
				success = true;
			}catch (IOException io) {
				runOnUiThread(new Runnable() {
				     public void run() {			
				    	 Toast.makeText(c, "Ocorreu um problema. Tente novamente mais tarde.", Toast.LENGTH_SHORT).show();
				    	 pd.dismiss();
				    	 bt_updateNo.performClick();
				    }
				});
			}	
			return null;
		}
		
		protected void onPostExecute(Void result) {
			if(success){				
				runOnUiThread(new Runnable() {
					public void run() {			
						Toast.makeText(c, "Dados atualizados", Toast.LENGTH_SHORT).show();
						pd.dismiss();
						bt_updateNo.performClick();
					}
				});
			}
		}
	}

}